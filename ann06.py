# -*- coding: utf-8 -*-
"""ann06.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19OHRFSkckTb-blxGmWXMnBxffC6CyXCJ
"""

import numpy as np

def train_bam(input_patterns, output_patterns):
    input_patterns = np.array(input_patterns)
    output_patterns = np.array(output_patterns)
    input_size = len(input_patterns[0])
    output_size = len(output_patterns[0])
    weights = np.zeros((input_size, output_size))

    for input_pattern, output_pattern in zip(input_patterns, output_patterns):
        weights += np.outer(input_pattern, output_pattern)

    return weights

def recall_bam(input_pattern, weights):
    output_pattern = np.dot(input_pattern, weights)
    output_pattern[output_pattern >= 0] = 1
    output_pattern[output_pattern < 0] = -1
    return output_pattern

# Example usage
input_patterns = [[1, -1, 1], [-1, 1, -1]]
output_patterns = [[1, 1], [-1, -1]]

weights = train_bam(input_patterns, output_patterns)

input_pattern = [-1, 1, -1]
retrieved_output = recall_bam(input_pattern, weights)
print("Retrieved Output:", retrieved_output)